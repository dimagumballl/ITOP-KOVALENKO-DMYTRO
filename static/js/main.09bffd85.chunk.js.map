{"version":3,"sources":["JScomponents/stopwatch/Stopwatch.js","App/App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","props","ComandWatch","Comand","Timer","setState","hour","min","second","StartStop","tick","timer","subscribe","data","state","prevstate","stoptick","unsubscribe","onClick","e","clearTimeout","Click","setTimeout","className","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAuJeA,E,kDAjJb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,YAAc,SAACC,GACE,UAAXA,EACF,EAAKC,MAAMD,GAEO,SAAXA,GACP,EAAKC,MAAMD,GACX,EAAKE,SAAS,CACZC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,UAAW,WAGK,YAAXN,GAEP,EAAKE,SAAS,CACZC,KAAM,EACNC,IAAK,EACLC,OAAQ,KA9BK,EAqCnBJ,MAAQ,SAACD,GACP,GAAe,SAAXA,EACF,EAAKE,SAAS,CACZI,UAAW,eAGV,GAAe,UAAXN,EACP,EAAKE,SAAS,CACZI,UAAW,SAEb,EAAKL,MAAM,WAER,GAAe,OAAXD,EAEP,IAEMO,EAFSC,YAAM,EAAG,KAEJC,WAAU,SAAAC,GACC,SAAzB,EAAKC,MAAML,YAGT,EAAKK,MAAMP,KAAO,GACpB,EAAKF,UAAS,SAACU,GACb,MAAO,CACLR,IAAK,EACLD,KAAMS,EAAUT,KAAO,MAKvB,EAAKQ,MAAMN,QAAU,GACvB,EAAKH,UAAS,SAACU,GACb,MAAO,CACLP,OAAQ,EACRD,IAAKQ,EAAUR,IAAM,MAKzB,EAAKF,UAAS,SAACU,GACb,MAAO,CACLP,OAAQO,EAAUP,OAAS,UAajCQ,EADUL,YAAM,EAAG,IACAC,WAAU,SAAAC,GACF,UAAzB,EAAKC,MAAML,YACbC,EAAKO,cACLD,EAASC,mBA7FA,EAsGnBC,QAAU,SAACC,GACTC,aAAa,EAAKT,QACO,IAArB,EAAKG,MAAMO,OACb,EAAKhB,SAAS,CACZgB,OAAO,IAET,EAAKV,MAAQW,YAAW,WACtB,EAAKjB,SAAS,CACZgB,OAAO,MAER,OAGHD,aAAa,EAAKT,OAClBW,YAAW,kBAAM,EAAKlB,MAAM,WAC5B,EAAKC,SAAS,CACZgB,OAAO,MApHX,EAAKP,MAAQ,CACXR,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,UAAW,QACXY,OAAO,GAPQ,E,0CA0HnB,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACGC,KAAKV,MAAMR,KADd,IACqBkB,KAAKV,MAAMP,IADhC,IACsCiB,KAAKV,MAAMN,UAEjD,sBAAKe,UAAU,oBAAf,UACE,wBAAQL,QAAS,kBAAM,EAAKhB,YAAY,EAAKY,MAAML,YAAnD,SAEIe,KAAKV,MAAML,YAGf,wBAAQS,QAAS,kBAAM,EAAKA,WAA5B,kBAGA,wBAAQA,QAAS,kBAAM,EAAKhB,YAAY,YAAxC,+B,GA1IcuB,a,MCQTC,MARf,WACE,OACE,qBAAKH,UAAU,UAAf,SACE,cAAC,EAAD,OCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.09bffd85.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Observable, timer,share } from 'rxjs';\r\n\r\nimport './stopwatch.css'\r\n\r\nclass Stopwatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hour: 0,\r\n      min: 0,\r\n      second: 0,\r\n      StartStop: \"START\",//fo check works of Stopwatch (Для проверки работы секундомера)\r\n      Click: false, //for double click function (Для двойного нажатия)\r\n    };\r\n  }\r\n\r\n\r\n  ComandWatch = (Comand) => {// controler for more comfortable using timer (Для удбства работы с методом Time())\r\n    if (Comand === \"START\") { // if Comand==\"START\" we jast starting timer (если Comand==\"START\" просто запускаем таймер)\r\n      this.Timer(Comand)\r\n    }\r\n    else if (Comand === \"STOP\") {// if \"STOP\" we are stoping timer and make time=0 (если \"STOP\" стоп мы обнуляем и останавливаем тамер)\r\n      this.Timer(Comand)\r\n      this.setState({\r\n        hour: 0,\r\n        min: 0,\r\n        second: 0,\r\n        StartStop: \"START\"\r\n      });\r\n    }\r\n    else if (Comand === \"RESTART\") { // if \"RRESTART\" time=0 but timer is not stoping(если \"RRESTART\" мы обнуляем время но не останавливаем таймер)\r\n\r\n      this.setState({\r\n        hour: 0,\r\n        min: 0,\r\n        second: 0,\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  Timer = (Comand) => {//Timer\r\n    if (Comand === \"WAIT\") {//if Command=\"WAIT\" tamer is stoping, it becam when doubleClcki is using(если Command=\"WAIT\" таймер останвливается просходит при двойном нажатии)\r\n      this.setState({\r\n        StartStop: \"START\" //if StartStop==\"START\" timer is stoped(если StartStop==\"START\" таймер стоит)\r\n      })\r\n    }\r\n    else if (Comand === \"START\") {//if START(это для START)\r\n      this.setState({\r\n        StartStop: \"STOP\" //if StartStop==\"STOP\" timer is runing(если StartStop==\"STOP\" таймер идет)\r\n      })\r\n      this.Timer(null);// and we restart timer with Comand=null ( и перезапускается с параметром Comand=null)\r\n    }\r\n    else if (Comand === null) {//if Comand null it's meen thet one comand was activete( Если Comand=null, это значит что таймер либо работает либо одна с команд была активирована)\r\n\r\n      const source = timer(0, 1000);\r\n\r\n      const tick = source.subscribe(data => {\r\n        if (this.state.StartStop === \"STOP\") {//if StartStop=\"STOP\" timer is working(если StartStop=\"STOP\" то таймер в стационарном робочем режиме)\r\n          // here we have manipulations with time(тут мы делаем счет времени)\r\n          \r\n          if (this.state.min >= 59) {\r\n            this.setState((prevstate) => {\r\n              return {\r\n                min: 0,\r\n                hour: prevstate.hour + 1\r\n              };\r\n            });\r\n          }\r\n          else {\r\n            if (this.state.second >= 59) {\r\n              this.setState((prevstate) => {\r\n                return {\r\n                  second: 0,\r\n                  min: prevstate.min + 1\r\n                };\r\n              });\r\n            }\r\n            else {\r\n              this.setState((prevstate) => {\r\n                return {\r\n                  second: prevstate.second + 1\r\n                };\r\n              });\r\n            }\r\n          }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n      });\r\n      const source2 = timer(0, 10);//постояная проверка таймера и его остановка\r\n      const stoptick = source2.subscribe(data => {\r\n          if (this.state.StartStop === \"START\") {\r\n            tick.unsubscribe()\r\n            stoptick.unsubscribe()\r\n          }\r\n        }\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n\r\n  onClick = (e) => { //double click function(двойное нажатие)\r\n    clearTimeout(this.timer);\r\n    if (this.state.Click === false) {// if Click falls(если Click falls)\r\n      this.setState({\r\n        Click: true// Click becam true(он становится true)\r\n      });\r\n      this.timer = setTimeout(() => {\r\n        this.setState({\r\n          Click: false\r\n        });\r\n      }, 200);//and Click staeing true 200 second then becam false(если мы не кликнем в тичении 200 милесикунд он вернется в исхдное положение)\r\n    }\r\n    else {\r\n      clearTimeout(this.timer);\r\n      setTimeout(() => this.Timer(\"WAIT\"));// but if user click in 200, he activate Timer() and send parammeter \"WAIT\"(но если мы нажмем то двойное нажатие засчитается)\r\n      this.setState({\r\n        Click: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <div className=\"stopwatch_timer\">\r\n          {this.state.hour}:{this.state.min}:{this.state.second}\r\n        </div>\r\n        <div className=\"stopwatch_buttons\">\r\n          <button onClick={() => this.ComandWatch(this.state.StartStop)}>\r\n            {\r\n              this.state.StartStop\r\n            }\r\n          </button>\r\n          <button onClick={() => this.onClick()}>\r\n            WAIT\r\n            </button>\r\n          <button onClick={() => this.ComandWatch(\"RESTART\")}>\r\n            RESTART\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stopwatch;\r\n","import React from 'react';\nimport Stopwatch from '../JScomponents/stopwatch/Stopwatch'\nimport '../common/style/main.css'\n\n\nfunction App() {\n  return (\n    <div className=\"example\">\n      <Stopwatch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}